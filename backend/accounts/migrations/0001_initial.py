# Generated by Django 3.1.5 on 2021-01-26 05:08

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=80, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('profile_img', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='accounts/images')),
                ('user_region', models.CharField(blank=True, choices=[('SEL', '서울'), ('PUS', '부산'), ('TAE', '대구'), ('INC', '인천'), ('KWJ', '광주'), ('TAJ', '대전'), ('USN', '울산'), ('KYG', '경기'), ('KAW', '강원'), ('CCB', '충북'), ('CCN', '충남'), ('CLB', '전북'), ('CLN', '전남'), ('KSB', '경북'), ('KSN', '경남'), ('CHJ', '제주')], max_length=4)),
                ('group', models.CharField(blank=True, max_length=40)),
                ('bio', models.TextField(blank=True)),
                ('sns_name', models.TextField(blank=True)),
                ('sns_url', models.URLField(blank=True)),
                ('tech_stack', multiselectfield.db.fields.MultiSelectField(choices=[('PY', 'Python3'), ('JV', 'Java'), ('HT', 'HTML5'), ('CS', 'CSS3'), ('JS', 'JavaScript'), ('VU', 'Vue.js'), ('RE', 'React.js'), ('AN', 'Angular'), ('MY', 'MySQL'), ('MD', 'MariaDB')], max_length=29)),
                ('project_name', models.CharField(blank=True, max_length=100)),
                ('project_url', models.URLField(blank=True)),
                ('tag', models.CharField(blank=True, max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.profile')),
            ],
            options={
                'verbose_name_plural': 'statuses',
            },
        ),
    ]
